<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mobi.hifun.seeu.medal.dao.MedalAwardProbabilityMapper" >
  <resultMap id="BaseResultMap" type="mobi.hifun.seeu.medal.entity.MedalAwardProbability" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="medal_id" property="medalId" jdbcType="BIGINT" />
    <result column="probability" property="probability" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, medal_id, probability, num, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from medal_award_probability
    where id = #{id,jdbcType=BIGINT}
  </select>


  <select id="selectLessThanNum" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from medal_award_probability
    where
      num &lt;=  #{number,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from medal_award_probability
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="mobi.hifun.seeu.medal.entity.MedalAwardProbability" >
    insert into medal_award_probability (id, medal_id, probability, 
      num, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{medalId,jdbcType=BIGINT}, #{probability,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>

  <insert id="insertSelective" parameterType="mobi.hifun.seeu.medal.entity.MedalAwardProbability" >
    insert into medal_award_probability
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="medalId != null" >
        medal_id,
      </if>
      <if test="probability != null" >
        probability,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="medalId != null" >
        #{medalId,jdbcType=BIGINT},
      </if>
      <if test="probability != null" >
        #{probability,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="mobi.hifun.seeu.medal.entity.MedalAwardProbability" >
    update medal_award_probability
    <set >
      <if test="medalId != null" >
        medal_id = #{medalId,jdbcType=BIGINT},
      </if>
      <if test="probability != null" >
        probability = #{probability,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="mobi.hifun.seeu.medal.entity.MedalAwardProbability" >
    update medal_award_probability
    set medal_id = #{medalId,jdbcType=BIGINT},
      probability = #{probability,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into medal_award_probability(medal_id,probability, num,create_time,update_time) values
    <foreach collection="list" index="index" item="item" separator=",">
      ( #{item.medalId,jdbcType=BIGINT}, #{item.probability,jdbcType=INTEGER}
      , #{item.num,jdbcType=INTEGER},#{item.createTime,jdbcType=BIGINT},#{item.updateTime,jdbcType=BIGINT} )
    </foreach>
  </insert>


</mapper>