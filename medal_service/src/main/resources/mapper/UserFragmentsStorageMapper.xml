<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mobi.hifun.seeu.medal.dao.UserFragmentsStorageMapper" >
  <resultMap id="BaseResultMap" type="mobi.hifun.seeu.medal.entity.UserFragmentsStorage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="medal_id" property="medalId" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="fragments_total_num" property="fragmentsTotalNum" jdbcType="INTEGER" />
    <result column="fragments_available_num" property="fragmentsAvailableNum" jdbcType="INTEGER" />
    <result column="fragments_used_num" property="fragmentsUsedNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, medal_id, uid, fragments_total_num, fragments_available_num, fragments_used_num, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_fragments_storage
    where id = #{id,jdbcType=BIGINT}
  </select>


  <select id="selectByUidAndMedalId" resultMap="BaseResultMap" >
    select
      <include refid="Base_Column_List" />
    from
      user_fragments_storage
    where
      uid = #{uid,jdbcType=BIGINT}
    and
      medal_id = #{medalId,jdbcType=BIGINT}
  </select>


  <select id="selectUserFragmentsByUid" resultType="java.util.HashMap" parameterType="java.lang.Long" >
    SELECT
      b.`name` as medalName ,a.fragments_available_num as fragmentsAvailableNum, b.id as medalId,
      1 as type,b.circulation as circulation
    FROM
      user_fragments_storage a,medal b
    WHERE
      a.uid = #{uid,jdbcType=BIGINT}
    and
      a.medal_id = b.id
    and
      a.fragments_available_num >0
    ORDER BY a.fragments_available_num DESC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_fragments_storage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="mobi.hifun.seeu.medal.entity.UserFragmentsStorage" >
    insert into user_fragments_storage (id, medal_id, uid, 
      fragments_total_num, fragments_available_num, 
      fragments_used_num, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{medalId,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, 
      #{fragmentsTotalNum,jdbcType=INTEGER}, #{fragmentsAvailableNum,jdbcType=INTEGER}, 
      #{fragmentsUsedNum,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="mobi.hifun.seeu.medal.entity.UserFragmentsStorage" >
    insert into user_fragments_storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="medalId != null" >
        medal_id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="fragmentsTotalNum != null" >
        fragments_total_num,
      </if>
      <if test="fragmentsAvailableNum != null" >
        fragments_available_num,
      </if>
      <if test="fragmentsUsedNum != null" >
        fragments_used_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="medalId != null" >
        #{medalId,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="fragmentsTotalNum != null" >
        #{fragmentsTotalNum,jdbcType=INTEGER},
      </if>
      <if test="fragmentsAvailableNum != null" >
        #{fragmentsAvailableNum,jdbcType=INTEGER},
      </if>
      <if test="fragmentsUsedNum != null" >
        #{fragmentsUsedNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="mobi.hifun.seeu.medal.entity.UserFragmentsStorage" >
    update user_fragments_storage
    <set >
      <if test="medalId != null" >
        medal_id = #{medalId,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="fragmentsTotalNum != null" >
        fragments_total_num = #{fragmentsTotalNum,jdbcType=INTEGER},
      </if>
      <if test="fragmentsAvailableNum != null" >
        fragments_available_num = #{fragmentsAvailableNum,jdbcType=INTEGER},
      </if>
      <if test="fragmentsUsedNum != null" >
        fragments_used_num = #{fragmentsUsedNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="mobi.hifun.seeu.medal.entity.UserFragmentsStorage" >
    update user_fragments_storage
    set medal_id = #{medalId,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      fragments_total_num = #{fragmentsTotalNum,jdbcType=INTEGER},
      fragments_available_num = #{fragmentsAvailableNum,jdbcType=INTEGER},
      fragments_used_num = #{fragmentsUsedNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>