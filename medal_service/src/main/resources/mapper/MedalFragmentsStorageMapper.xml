<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mobi.hifun.seeu.medal.dao.MedalFragmentsStorageMapper" >
  <resultMap id="BaseResultMap" type="mobi.hifun.seeu.medal.entity.MedalFragmentsStorage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="medal_id" property="medalId" jdbcType="BIGINT" />
    <result column="total_medal_num" property="totalMedalNum" jdbcType="INTEGER" />
    <result column="used_medal_num" property="usedMedalNum" jdbcType="INTEGER" />
    <result column="available_medal_num" property="availableMedalNum" jdbcType="INTEGER" />
    <result column="reserve_medal_num" property="reserveMedalNum" jdbcType="INTEGER" />
    <result column="destroy_medal_num" property="destroyMedalNum" jdbcType="INTEGER" />
    <result column="divine_available_fragments_num" property="divineAvailableFragmentsNum" jdbcType="INTEGER" />
    <result column="total_fragments_num" property="totalFragmentsNum" jdbcType="INTEGER" />
    <result column="destory_fragments_num" property="destoryFragmentsNum" jdbcType="INTEGER" />
    <result column="task_available_fragments_num" property="taskAvailableFragmentsNum" jdbcType="INTEGER" />
    <result column="reserve_fragments_num" property="reserveFragmentsNum" jdbcType="INTEGER" />
    <result column="used_fragments_num" property="usedFragmentsNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, medal_id, total_medal_num, used_medal_num, available_medal_num, reserve_medal_num,
    destroy_medal_num, divine_available_fragments_num, total_fragments_num, destory_fragments_num,
    task_available_fragments_num, reserve_fragments_num, used_fragments_num, create_time,
    update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from medal_fragments_storage
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByMedalId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from medal_fragments_storage
    where medal_id = #{medalId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from medal_fragments_storage
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="mobi.hifun.seeu.medal.entity.MedalFragmentsStorage" >
    insert into medal_fragments_storage (id, medal_id, total_medal_num,
      used_medal_num, available_medal_num, reserve_medal_num,
      destroy_medal_num, divine_available_fragments_num,
      total_fragments_num, destory_fragments_num,
      task_available_fragments_num, reserve_fragments_num,
      used_fragments_num, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{medalId,jdbcType=BIGINT}, #{totalMedalNum,jdbcType=INTEGER},
      #{usedMedalNum,jdbcType=INTEGER}, #{availableMedalNum,jdbcType=INTEGER}, #{reserveMedalNum,jdbcType=INTEGER},
      #{destroyMedalNum,jdbcType=INTEGER}, #{divineAvailableFragmentsNum,jdbcType=INTEGER},
      #{totalFragmentsNum,jdbcType=INTEGER}, #{destoryFragmentsNum,jdbcType=INTEGER},
      #{taskAvailableFragmentsNum,jdbcType=INTEGER}, #{reserveFragmentsNum,jdbcType=INTEGER},
      #{usedFragmentsNum,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>

  <insert id="insertSelective" parameterType="mobi.hifun.seeu.medal.entity.MedalFragmentsStorage" >
    insert into medal_fragments_storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="medalId != null" >
        medal_id,
      </if>
      <if test="totalMedalNum != null" >
        total_medal_num,
      </if>
      <if test="usedMedalNum != null" >
        used_medal_num,
      </if>
      <if test="availableMedalNum != null" >
        available_medal_num,
      </if>
      <if test="reserveMedalNum != null" >
        reserve_medal_num,
      </if>
      <if test="destroyMedalNum != null" >
        destroy_medal_num,
      </if>
      <if test="divineAvailableFragmentsNum != null" >
        divine_available_fragments_num,
      </if>
      <if test="totalFragmentsNum != null" >
        total_fragments_num,
      </if>
      <if test="destoryFragmentsNum != null" >
        destory_fragments_num,
      </if>
      <if test="taskAvailableFragmentsNum != null" >
        task_available_fragments_num,
      </if>
      <if test="reserveFragmentsNum != null" >
        reserve_fragments_num,
      </if>
      <if test="usedFragmentsNum != null" >
        used_fragments_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="medalId != null" >
        #{medalId,jdbcType=BIGINT},
      </if>
      <if test="totalMedalNum != null" >
        #{totalMedalNum,jdbcType=INTEGER},
      </if>
      <if test="usedMedalNum != null" >
        #{usedMedalNum,jdbcType=INTEGER},
      </if>
      <if test="availableMedalNum != null" >
        #{availableMedalNum,jdbcType=INTEGER},
      </if>
      <if test="reserveMedalNum != null" >
        #{reserveMedalNum,jdbcType=INTEGER},
      </if>
      <if test="destroyMedalNum != null" >
        #{destroyMedalNum,jdbcType=INTEGER},
      </if>
      <if test="divineAvailableFragmentsNum != null" >
        #{divineAvailableFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="totalFragmentsNum != null" >
        #{totalFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="destoryFragmentsNum != null" >
        #{destoryFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="taskAvailableFragmentsNum != null" >
        #{taskAvailableFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="reserveFragmentsNum != null" >
        #{reserveFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="usedFragmentsNum != null" >
        #{usedFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="mobi.hifun.seeu.medal.entity.MedalFragmentsStorage" >
    update medal_fragments_storage
    <set >
      <if test="medalId != null" >
        medal_id = #{medalId,jdbcType=BIGINT},
      </if>
      <if test="totalMedalNum != null" >
        total_medal_num = #{totalMedalNum,jdbcType=INTEGER},
      </if>
      <if test="usedMedalNum != null" >
        used_medal_num = #{usedMedalNum,jdbcType=INTEGER},
      </if>
      <if test="availableMedalNum != null" >
        available_medal_num = #{availableMedalNum,jdbcType=INTEGER},
      </if>
      <if test="reserveMedalNum != null" >
        reserve_medal_num = #{reserveMedalNum,jdbcType=INTEGER},
      </if>
      <if test="destroyMedalNum != null" >
        destroy_medal_num = #{destroyMedalNum,jdbcType=INTEGER},
      </if>
      <if test="divineAvailableFragmentsNum != null" >
        divine_available_fragments_num = #{divineAvailableFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="totalFragmentsNum != null" >
        total_fragments_num = #{totalFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="destoryFragmentsNum != null" >
        destory_fragments_num = #{destoryFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="taskAvailableFragmentsNum != null" >
        task_available_fragments_num = #{taskAvailableFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="reserveFragmentsNum != null" >
        reserve_fragments_num = #{reserveFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="usedFragmentsNum != null" >
        used_fragments_num = #{usedFragmentsNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="mobi.hifun.seeu.medal.entity.MedalFragmentsStorage" >
    update medal_fragments_storage
    set medal_id = #{medalId,jdbcType=BIGINT},
      total_medal_num = #{totalMedalNum,jdbcType=INTEGER},
      used_medal_num = #{usedMedalNum,jdbcType=INTEGER},
      available_medal_num = #{availableMedalNum,jdbcType=INTEGER},
      reserve_medal_num = #{reserveMedalNum,jdbcType=INTEGER},
      destroy_medal_num = #{destroyMedalNum,jdbcType=INTEGER},
      divine_available_fragments_num = #{divineAvailableFragmentsNum,jdbcType=INTEGER},
      total_fragments_num = #{totalFragmentsNum,jdbcType=INTEGER},
      destory_fragments_num = #{destoryFragmentsNum,jdbcType=INTEGER},
      task_available_fragments_num = #{taskAvailableFragmentsNum,jdbcType=INTEGER},
      reserve_fragments_num = #{reserveFragmentsNum,jdbcType=INTEGER},
      used_fragments_num = #{usedFragmentsNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>